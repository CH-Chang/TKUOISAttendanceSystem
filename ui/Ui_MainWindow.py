# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\桌面\TKUIofoCenterClient\uiFile\Main.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *

from utils.SvgHelper import SvgHelper
from utils.ImgHelper import ImgHelper
from icon.svg import close, minimize, maximize, left, right, logoIcon, adminView
from img.png import logo


class Ui_MainWindow(object):

    checkButtons = []

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 720)
        MainWindow.setWindowFlags(Qt.CustomizeWindowHint)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(True)
        self.centralwidget.setStyleSheet("QWidget{background-color: white;}")
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QMetaObject.connectSlotsByName(MainWindow)

        self.setupMainLayout()
        self.setupWindowNav()
        self.setupFuncArea()
        self.setupCheckArea()

    def retranslateUi(self, MainWindow):
        _translate = QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "淡江資訊處 工讀考勤系統"))
        MainWindow.setWindowIcon(QIcon(SvgHelper.getQPixmapFromBytes(logoIcon, QSize(512, 512))))


    def setupMainLayout(self):
        self.mainLayout = QVBoxLayout()
        self.mainLayout.setContentsMargins(0,0,0,0)
        self.centralwidget.setLayout(self.mainLayout)

    def setupWindowNav(self):
        windowNav = QWidget()
        windowNavLayout = QHBoxLayout()

        self.windowNavClose = QPushButton()
        self.windowNavClose.setIcon(QIcon(SvgHelper.getQPixmapFromBytes(close, QSize(12,12))))
        self.windowNavClose.setIconSize(QSize(12,12))
        self.windowNavClose.resize(12,12)
        self.windowNavClose.setStyleSheet("QPushButton{background-color: transparent; border-style:none; padding: 3px 3px 3px 3px;} QPushButton:hover{background-color: #eeeeee; border-style:none; border-radius:5px; padding: 3px 3px 3px 3px;} QPushButton:pressed{background-color: #999999; border-style:none; border-radius:5px; padding: 3px 3px 3px 3px;}")
        self.windowNavClose.setCursor(QCursor(Qt.PointingHandCursor))

        self.windowNavMaximize = QPushButton()
        self.windowNavMaximize.setIcon(QIcon(SvgHelper.getQPixmapFromBytes(maximize, QSize(12,12))))
        self.windowNavMaximize.setIconSize(QSize(12,12))
        self.windowNavMaximize.resize(12,12)
        self.windowNavMaximize.setStyleSheet("QPushButton{background-color: transparent; border-style:none; padding: 3px 3px 3px 3px;} QPushButton:hover{background-color: #eeeeee; border-style:none; border-radius:5px; padding: 3px 3px 3px 3px;} QPushButton:pressed{background-color: #999999; border-style:none; border-radius:5px; padding: 3px 3px 3px 3px;}")
        self.windowNavMaximize.setCursor(QCursor(Qt.PointingHandCursor))

        self.windowNavMinimize = QPushButton()
        self.windowNavMinimize.setIcon(QIcon(SvgHelper.getQPixmapFromBytes(minimize, QSize(12,12))))
        self.windowNavMinimize.setIconSize(QSize(12,12))
        self.windowNavMinimize.resize(12,12)
        self.windowNavMinimize.setStyleSheet("QPushButton{background-color: transparent; border-style:none; padding: 3px 3px 3px 3px;} QPushButton:hover{background-color: #eeeeee; border-style:none; border-radius:5px; padding: 3px 3px 3px 3px;} QPushButton:pressed{background-color: #999999; border-style:none; border-radius:5px; padding: 3px 3px 3px 3px;}")
        self.windowNavMinimize.setCursor(QCursor(Qt.PointingHandCursor))

        self.adminView = QPushButton()
        self.adminView.setIcon(QIcon(SvgHelper.getQPixmapFromBytes(adminView, QSize(12,12))))
        self.adminView.setIconSize(QSize(12,12))
        self.adminView.resize(12,12)
        self.adminView.setStyleSheet("QPushButton{background-color: transparent; border-style:none; padding: 3px 3px 3px 3px;} QPushButton:hover{background-color: #eeeeee; border-style:none; border-radius:5px; padding: 3px 3px 3px 3px;} QPushButton:pressed{background-color: #999999; border-style:none; border-radius:5px; padding: 3px 3px 3px 3px;}")
        self.adminView.setCursor(QCursor(Qt.PointingHandCursor))


        windowNavLayout.addStretch()
        windowNavLayout.addWidget(self.adminView)
        windowNavLayout.addWidget(self.windowNavMinimize)
        windowNavLayout.addWidget(self.windowNavMaximize)
        windowNavLayout.addWidget(self.windowNavClose)

        windowNav.setLayout(windowNavLayout)


        self.mainLayout.addWidget(windowNav, alignment=Qt.AlignTop)

    def setupFuncArea(self):
        funcArea = QWidget()
        funcAreaLayout = QHBoxLayout()

        funcAreaLeft = QWidget()
        funcAreaLeftLayout = QVBoxLayout()

        self.logos = QLabel()
        self.logos.setPixmap(QPixmap.fromImage(ImgHelper.getImageQtfromBytes(logo)))
        self.logos.setFixedSize(185.04, 108.26)
        self.logos.setScaledContents(True)
        self.logos.setAlignment(Qt.AlignCenter)

        self.times = QLabel()
        self.times.setFont(QFont("Noto Sans TC Regular", 12))
        self.times.setStyleSheet("QLabel{color:#f7931e;}")
        self.times.setText("")
        self.times.setAlignment(Qt.AlignCenter)

        funcAreaLeftLayout.addWidget(self.logos, alignment=Qt.AlignCenter)
        funcAreaLeftLayout.addWidget(self.times, alignment=Qt.AlignTop)
        funcAreaLeftLayout.setSpacing(10)
        funcAreaLeft.setLayout(funcAreaLeftLayout)

        self.funcAreaRight = QWidget()
        funcAreaRightLayout = QGridLayout()

        importLabel = QLabel()
        importLabel.setFont(QFont("Noto Sans TC Regular", 11))
        importLabel.setText("資料匯入")
        importLabel.setAlignment(Qt.AlignCenter)
        importLabel.setStyleSheet("QLabel{color:#f7931e;}")

        exportLabel = QLabel()
        exportLabel.setFont(QFont("Noto Sans TC Regular", 11))
        exportLabel.setText("資料匯出")
        exportLabel.setAlignment(Qt.AlignCenter)
        exportLabel.setStyleSheet("QLabel{color:#f7931e;}")

        editLabel = QLabel()
        editLabel.setFont(QFont("Noto Sans TC Regular", 11))
        editLabel.setText("資料編修")
        editLabel.setAlignment(Qt.AlignCenter)
        editLabel.setStyleSheet("QLabel{color:#f7931e;}")

        settingLabel = QLabel()
        settingLabel.setFont(QFont("Noto Sans TC Regular", 11))
        settingLabel.setText("系統設定")
        settingLabel.setAlignment(Qt.AlignCenter)
        settingLabel.setStyleSheet("QLabel{color:#f7931e;}")

        self.importStaff = QPushButton()
        self.importStaff.setText("工讀生匯入")
        self.importStaff.setFont(QFont("Noto Sans TC Regular", 11))
        self.importStaff.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.importStaff.setCursor(QCursor(Qt.PointingHandCursor))
        self.importStaff.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)


        self.importSemester = QPushButton()
        self.importSemester.setText("學期班匯入")
        self.importSemester.setFont(QFont("Noto Sans TC Regular", 11))
        self.importSemester.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.importSemester.setCursor(QCursor(Qt.PointingHandCursor))
        self.importSemester.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.importSummer = QPushButton()
        self.importSummer.setText("暑假班匯入")
        self.importSummer.setFont(QFont("Noto Sans TC Regular", 11))
        self.importSummer.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.importSummer.setCursor(QCursor(Qt.PointingHandCursor))
        self.importSummer.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.importWinter = QPushButton()
        self.importWinter.setText("寒假班匯入")
        self.importWinter.setFont(QFont("Noto Sans TC Regular", 11))
        self.importWinter.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.importWinter.setCursor(QCursor(Qt.PointingHandCursor))
        self.importWinter.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.importMidterm = QPushButton()
        self.importMidterm.setText("期中考匯入")
        self.importMidterm.setFont(QFont("Noto Sans TC Regular", 11))
        self.importMidterm.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.importMidterm.setCursor(QCursor(Qt.PointingHandCursor))
        self.importMidterm.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.importFinal = QPushButton()
        self.importFinal.setText("期末考匯入")
        self.importFinal.setFont(QFont("Noto Sans TC Regular", 11))
        self.importFinal.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.importFinal.setCursor(QCursor(Qt.PointingHandCursor))
        self.importFinal.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.exportInterval = QPushButton()
        self.exportInterval.setText("指定區匯出")
        self.exportInterval.setFont(QFont("Noto Sans TC Regular", 11))
        self.exportInterval.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.exportInterval.setCursor(QCursor(Qt.PointingHandCursor))
        self.exportInterval.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.exportMonth = QPushButton()
        self.exportMonth.setText("本月匯出")
        self.exportMonth.setFont(QFont("Noto Sans TC Regular", 11))
        self.exportMonth.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.exportMonth.setCursor(QCursor(Qt.PointingHandCursor))
        self.exportMonth.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.exportLastMonth = QPushButton()
        self.exportLastMonth.setText("上月匯出")
        self.exportLastMonth.setFont(QFont("Noto Sans TC Regular", 11))
        self.exportLastMonth.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.exportLastMonth.setCursor(QCursor(Qt.PointingHandCursor))
        self.exportLastMonth.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.editSchedule = QPushButton()
        self.editSchedule.setText("考勤記錄編輯")
        self.editSchedule.setFont(QFont("Noto Sans TC Regular", 11))
        self.editSchedule.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.editSchedule.setCursor(QCursor(Qt.PointingHandCursor))
        self.editSchedule.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.editStaff = QPushButton()
        self.editStaff.setText("工讀生編輯")
        self.editStaff.setFont(QFont("Noto Sans TC Regular", 11))
        self.editStaff.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.editStaff.setCursor(QCursor(Qt.PointingHandCursor))
        self.editStaff.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.editArrangement = QPushButton()
        self.editArrangement.setText("班表編輯")
        self.editArrangement.setFont(QFont("Noto Sans TC Regular", 11))
        self.editArrangement.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.editArrangement.setCursor(QCursor(Qt.PointingHandCursor))
        self.editArrangement.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.editTodaySchedule = QPushButton()
        self.editTodaySchedule.setText("臨時調班")
        self.editTodaySchedule.setFont(QFont("Noto Sans TC Regular", 11))
        self.editTodaySchedule.setStyleSheet(
            "QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.editTodaySchedule.setCursor(QCursor(Qt.PointingHandCursor))
        self.editTodaySchedule.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.editVacation = QPushButton()
        self.editVacation.setText("假日編輯")
        self.editVacation.setFont(QFont("Noto Sans TC Regular", 11))
        self.editVacation.setStyleSheet(
            "QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.editVacation.setCursor(QCursor(Qt.PointingHandCursor))
        self.editVacation.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.editShift = QPushButton()
        self.editShift.setText("班別編輯")
        self.editShift.setFont(QFont("Noto Sans TC Regular", 11))
        self.editShift.setStyleSheet(
            "QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.editShift.setCursor(QCursor(Qt.PointingHandCursor))
        self.editShift.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.editRoom = QPushButton()
        self.editRoom.setText("實習室編輯")
        self.editRoom.setFont(QFont("Noto Sans TC Regular", 11))
        self.editRoom.setStyleSheet(
            "QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.editRoom.setCursor(QCursor(Qt.PointingHandCursor))
        self.editRoom.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.changePassword = QPushButton()
        self.changePassword.setText("系統密碼變更")
        self.changePassword.setFont(QFont("Noto Sans TC Regular", 11))
        self.changePassword.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.changePassword.setCursor(QCursor(Qt.PointingHandCursor))
        self.changePassword.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)

        self.about = QPushButton()
        self.about.setText("關於系統")
        self.about.setFont(QFont("Noto Sans TC Regular", 11))
        self.about.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")
        self.about.setCursor(QCursor(Qt.PointingHandCursor))
        self.about.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)



        funcAreaRightLayout.addWidget(importLabel, 0, 0)
        funcAreaRightLayout.addWidget(self.importStaff, 0, 1)
        funcAreaRightLayout.addWidget(self.importSemester, 0, 2)
        funcAreaRightLayout.addWidget(self.importSummer, 0, 3)
        funcAreaRightLayout.addWidget(self.importWinter, 0, 4)
        funcAreaRightLayout.addWidget(self.importMidterm, 0, 5)
        funcAreaRightLayout.addWidget(self.importFinal, 0, 6)
        funcAreaRightLayout.addWidget(exportLabel, 1, 0)
        funcAreaRightLayout.addWidget(self.exportInterval, 1, 1)
        funcAreaRightLayout.addWidget(self.exportMonth, 1, 2)
        funcAreaRightLayout.addWidget(self.exportLastMonth, 1, 3)
        funcAreaRightLayout.addWidget(editLabel, 2, 0)
        funcAreaRightLayout.addWidget(self.editSchedule, 2, 1)
        funcAreaRightLayout.addWidget(self.editStaff, 2, 2)
        funcAreaRightLayout.addWidget(self.editArrangement, 2, 3)
        funcAreaRightLayout.addWidget(self.editTodaySchedule, 2, 4)
        funcAreaRightLayout.addWidget(self.editShift, 2 , 5)
        funcAreaRightLayout.addWidget(self.editRoom, 2, 6)
        funcAreaRightLayout.addWidget(self.editVacation, 2, 7)
        funcAreaRightLayout.addWidget(settingLabel, 3, 0)
        funcAreaRightLayout.addWidget(self.changePassword, 3, 1)
        funcAreaRightLayout.addWidget(self.about, 3, 2)
        funcAreaRightLayout.setColumnStretch(0, 2)
        funcAreaRightLayout.setColumnStretch(1, 1)
        funcAreaRightLayout.setColumnStretch(2, 1)
        funcAreaRightLayout.setColumnStretch(3, 1)
        funcAreaRightLayout.setColumnStretch(4, 1)
        funcAreaRightLayout.setColumnStretch(5, 1)
        funcAreaRightLayout.setColumnStretch(6, 1)
        funcAreaRightLayout.setColumnStretch(7, 1)
        self.funcAreaRight.setLayout(funcAreaRightLayout)

        funcAreaLayout.addStretch(1)
        funcAreaLayout.addWidget(funcAreaLeft, 2)
        funcAreaLayout.addWidget(self.funcAreaRight, 4)
        funcAreaLayout.addStretch(1)

        funcArea.setLayout(funcAreaLayout)

        self.mainLayout.addWidget(funcArea, 2, alignment=Qt.AlignVCenter)


    def setupCheckArea(self):
        checkArea = QWidget()
        checkAreaLayout = QHBoxLayout()

        self.switchLeft = QPushButton()
        self.switchLeft.setIcon(QIcon(SvgHelper.getQPixmapFromBytes(left, QSize(20,20))))
        self.switchLeft.setIconSize(QSize(20,20))
        self.switchLeft.resize(20,20)
        self.switchLeft.setStyleSheet("QPushButton{border-style: none;}")
        self.switchLeft.setCursor(QCursor(Qt.PointingHandCursor))

        self.switchRight = QPushButton()
        self.switchRight.setIcon(QIcon(SvgHelper.getQPixmapFromBytes(right, QSize(20,20))))
        self.switchRight.setIconSize(QSize(20,20))
        self.switchRight.resize(20,20)
        self.switchRight.setStyleSheet("QPushButton{border-style: none;}")
        self.switchRight.setCursor(QCursor(Qt.PointingHandCursor))

        self.checkStacked = QStackedWidget()

        checkAreaLayout.addStretch(1)
        checkAreaLayout.addWidget(self.switchLeft, 1, alignment=Qt.AlignLeft)
        checkAreaLayout.addWidget(self.checkStacked, 10)
        checkAreaLayout.addWidget(self.switchRight, 1, alignment=Qt.AlignRight)
        checkAreaLayout.addStretch(1)

        checkArea.setLayout(checkAreaLayout)

        self.mainLayout.addWidget(checkArea, 3, alignment=Qt.AlignVCenter)


    def loadingCheckAreaFrame(self, shifts: list, rooms: list):
        for i in range(self.checkStacked.count()-1,-1,-1):
            widget = self.checkStacked.widget(i)
            self.checkStacked.removeWidget(widget)
            widget.deleteLater()

        self.loadingCheckMainFrame()
        self.loadingCheckShiftFrame(shifts, rooms)

    def loadingCheckShiftFrame(self, shifts: list, rooms: list):
        for shift in reversed(shifts):
            checkShift = QWidget()
            checkShiftLayout = QGridLayout()

            shiftLabel = QLabel()
            shiftLabel.setText(shift[1])
            shiftLabel.setFont(QFont("Noto Sans TC Regular", 14))
            shiftLabel.setAlignment(Qt.AlignCenter)
            shiftLabel.setStyleSheet("QLabel{color: #f7931e;}")

            for index, room in enumerate(rooms):
                roomLabel = QLabel()
                roomLabel.setText(room[1])
                roomLabel.setFont(QFont("Noto Sans TC Regular", 12))
                roomLabel.setAlignment(Qt.AlignCenter)
                checkShiftLayout.addWidget(roomLabel, 0, index+1, alignment=Qt.AlignTop)

            checkShiftLayout.addWidget(shiftLabel, 0, 0, alignment=Qt.AlignTop)
            checkShift.setLayout(checkShiftLayout)


            self.checkStacked.addWidget(checkShift)


    def loadingCheckMainFrame(self):

        checkMain = QWidget()
        checkMainLayout = QHBoxLayout()

        checkMainNav = QWidget()
        checkMainNavLayout = QHBoxLayout()


        self.checkMainNavCheckIn = QPushButton()
        self.checkMainNavCheckIn.setText("簽到")
        self.checkMainNavCheckIn.setFont(QFont("Noto Sans TC Regular", 11))
        self.checkMainNavCheckIn.setCursor(QCursor(Qt.PointingHandCursor))
        self.checkMainNavCheckIn.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")

        self.checkMainNavCheckOut = QPushButton()
        self.checkMainNavCheckOut.setText("簽退")
        self.checkMainNavCheckOut.setFont(QFont("Noto Sans TC Regular", 11))
        self.checkMainNavCheckOut.setCursor(QCursor(Qt.PointingHandCursor))
        self.checkMainNavCheckOut.setStyleSheet("QPushButton{color:#f7931e; border-style: none; border: 1px solid #f7931e; border-radius: 5px; padding: 5px 8px 5px 8px; background-color: white;} QPushButton:hover{color: white; background-color:#f7931e} QPushButton:pressed{color: white; background-color:#DC831A}")


        checkMainNavLayout.addWidget(self.checkMainNavCheckIn)
        checkMainNavLayout.addWidget(self.checkMainNavCheckOut)
        checkMainNav.setLayout(checkMainNavLayout)


        self.checkMainList = QTreeWidget()
        self.checkMainList.setColumnCount(4)
        self.checkMainList.setHeaderLabels(["工讀生編號","工讀生姓名","班別", "實習室","簽到時間","簽退時間"])
        self.checkMainList.setFont(QFont("Noto Sans TC Regular", 11))
        self.checkMainList.setStyleSheet("QHeaderView::section{color: #f7931e; border: 0; background-color: white;} QTreeWidget{border-style: none;} QTreeWidget::item:hover{background-color: #FFD4A2; color: black;} QTreeWidget::item:selected{background-color: #FCA642; color: white;}")
        self.checkMainList.header().setDefaultAlignment(Qt.AlignCenter)
        self.checkMainList.horizontalScrollBar().setStyleSheet("QScrollBar:horizontal{ border-radius: 5px; background: white; padding-left:2px; padding-right: 2px;} QScrollBar::handle:horizontal{background: #9F9F9F; border-radius: 5px; margin-top: 3px; margin-bottom: 3px;} QScrollBar::handle:horizontal:hover{background: #3d3d3d; border-radius: 5px; margin-top: 3px; margin-bottom: 3px;} QScrollBar::add-line:horizontal{height: 0px; width: 0px; image: url('')} QScrollBar::sub-line:horizontal{height: 0px; width: 0px; image: url('')}")
        self.checkMainList.verticalScrollBar().setStyleSheet("QScrollBar:vertical{ border-radius: 5px; background: white; padding-top:2px; padding-bottom: 2px;} QScrollBar::handle:vertical{background: #9F9F9F; border-radius: 5px; margin-left: 3px; margin-right: 3px;} QScrollBar::handle:vertical:hover{background: #3d3d3d; border-radius: 5px; margin-left: 3px; margin-right: 3px;} QScrollBar::add-line:horizontal{height: 0px; width: 0px; image: url('')} QScrollBar::sub-line:vertical{height: 0px; width: 0px; image: url('')}")

        checkMainLayout.addWidget(self.checkMainList, 8)
        checkMainLayout.addWidget(checkMainNav, 3)
        checkMain.setLayout(checkMainLayout)

        self.checkStacked.addWidget(checkMain)

    def loadingCheckMainList(self, data: list):
        self.checkMainList.clear()

        for item in data:
            qTreeWidgetItem = QTreeWidgetItem(item[1:-1])
            qTreeWidgetItem.setData(0, Qt.UserRole, item[0])

            for i in range(0, qTreeWidgetItem.columnCount()):
                qTreeWidgetItem.setTextAlignment(i, Qt.AlignCenter)
                qTreeWidgetItem.setFont(i, QFont("Noto Sans TC Regular", 10))

            self.checkMainList.addTopLevelItem(qTreeWidgetItem)

    def loadingCheckShiftData(self, data: list):

        self.checkButtons.clear()
        formatedData = {}

        for item in data:
            if not item[3] in formatedData:
                formatedData[item[3]] = {}

            if not item[4] in formatedData[item[3]]:
                formatedData[item[3]][item[4]] = []

            formatedData[item[3]][item[4]].append([item[0],item[1], item[2], item[7]])

        for i in range(1, self.checkStacked.count()):
            widget = self.checkStacked.widget(i)
            widgetLayout = widget.layout()


            for j in range(1, widgetLayout.rowCount()):
                for f in range(0, widgetLayout.columnCount()):
                    delWidgetItem = widgetLayout.itemAtPosition(j, f)
                    if not delWidgetItem is None:
                        delWidget = delWidgetItem.widget()
                        delWidget.deleteLater()
                        del delWidget
                        del delWidgetItem

            shiftName = widgetLayout.itemAtPosition(0, 0).widget().text()

            if shiftName in formatedData:
                for j in range(1, widgetLayout.columnCount()):
                    roomName = widgetLayout.itemAtPosition(0, j).widget().text()
                    if roomName in formatedData[shiftName]:
                        childFormatedData = formatedData[shiftName][roomName]
                        for f in range(0, len(childFormatedData)):

                            checkButton = QPushButton()
                            checkButton.setText(f'{childFormatedData[f][1]} {childFormatedData[f][2]}')
                            checkButton.setFont(QFont("Noto Sans TC Regular", 10))
                            checkButton.setCursor(QCursor(Qt.PointingHandCursor))
                            checkButton.setToolTip(childFormatedData[f][3])
                            checkButton.setProperty("id", childFormatedData[f][0])


                            if childFormatedData[f][3] in ["準時", "執行中", "已簽到未執行"]:
                                checkButton.setStyleSheet("QPushButton{border-style: none; border-bottom: 2px solid green; padding-bottom: 3px;}")
                            elif childFormatedData[f][3] in ["未執行"]:
                                checkButton.setStyleSheet("QPushButton{border-style: none; border-bottom: 2px solid #f7931e; padding-bottom: 3px;}")
                            else:
                                checkButton.setStyleSheet("QPushButton{border-style: none; border-bottom: 2px solid red; padding-bottom: 3px;}")


                            widgetLayout.addWidget(checkButton, f+1, j , alignment=Qt.AlignCenter)
                            self.checkButtons.append(checkButton)
























